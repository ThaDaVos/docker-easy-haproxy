global
    log stdout  format raw  local0  info
    maxconn 2000
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options no-sslv3 no-tls-tickets

    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options no-sslv3 no-tls-tickets

    ssl-dh-param-file /etc/haproxy/dhparam-1024


defaults
    log global
    option httplog

    timeout connect    3s
    timeout client    10s
    timeout server    10m


frontend http_in_80
    bind *:80
    mode http

    acl is_rule_host2_local_80_1 hdr(host) -i host2.local
    acl is_rule_host2_local_80_2 hdr(host) -i host2.local:80
    http-request redirect scheme https code 301 if is_rule_host2_local_80_1 OR is_rule_host2_local_80_2

    acl is_rule_host1_local_80_1 hdr(host) -i host1.local
    acl is_rule_host1_local_80_2 hdr(host) -i host1.local:80
    http-request redirect scheme https code 301 if is_rule_host1_local_80_1 OR is_rule_host1_local_80_2

backend srv_host2_local_80
    balance roundrobin
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server srv-0 3571640c480a:80 check weight 1
backend srv_host1_local_80
    balance roundrobin
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server srv-0 5b69bc7fea1b:80 check weight 1

frontend http_in_443
    bind *:443  ssl crt /certs/letsencrypt/ alpn h2,http/1.1 crt /certs/haproxy/ alpn h2,http/1.1
    mode http

    acl is_rule_host2_local_443_1 hdr(host) -i host2.local
    acl is_rule_host2_local_443_2 hdr(host) -i host2.local:443
    use_backend srv_host2_local_443 if is_rule_host2_local_443_1 OR is_rule_host2_local_443_2

    acl is_rule_host1_local_443_1 hdr(host) -i host1.local
    acl is_rule_host1_local_443_2 hdr(host) -i host1.local:443
    use_backend srv_host1_local_443 if is_rule_host1_local_443_1 OR is_rule_host1_local_443_2

backend srv_host2_local_443
    balance roundrobin
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server srv-0 3571640c480a:8080 check weight 1
backend srv_host1_local_443
    balance roundrobin
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server srv-0 5b69bc7fea1b:8080 check weight 1

backend certbot_backend
    mode http
    server certbot 127.0.0.1:2080
